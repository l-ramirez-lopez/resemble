// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// fast_diss
arma::mat fast_diss(NumericMatrix X, NumericMatrix Y, String method);
RcppExport SEXP _resemble_fast_diss(SEXP XSEXP, SEXP YSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP);
    Rcpp::traits::input_parameter< String >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(fast_diss(X, Y, method));
    return rcpp_result_gen;
END_RCPP
}
// fast_diss_vector
NumericVector fast_diss_vector(NumericVector X);
RcppExport SEXP _resemble_fast_diss_vector(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(fast_diss_vector(X));
    return rcpp_result_gen;
END_RCPP
}
// moving_cor_diss
NumericMatrix moving_cor_diss(arma::mat X, arma::mat Y, int w);
RcppExport SEXP _resemble_moving_cor_diss(SEXP XSEXP, SEXP YSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(moving_cor_diss(X, Y, w));
    return rcpp_result_gen;
END_RCPP
}
// which_min
NumericVector which_min(NumericMatrix X);
RcppExport SEXP _resemble_which_min(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(which_min(X));
    return rcpp_result_gen;
END_RCPP
}
// which_min_vector
NumericVector which_min_vector(NumericVector X);
RcppExport SEXP _resemble_which_min_vector(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(which_min_vector(X));
    return rcpp_result_gen;
END_RCPP
}
// get_col_largest_sd
NumericVector get_col_largest_sd(arma::mat X);
RcppExport SEXP _resemble_get_col_largest_sd(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(get_col_largest_sd(X));
    return rcpp_result_gen;
END_RCPP
}
// get_column_sds
NumericVector get_column_sds(arma::mat X);
RcppExport SEXP _resemble_get_column_sds(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(get_column_sds(X));
    return rcpp_result_gen;
END_RCPP
}
// get_column_means
NumericVector get_column_means(arma::mat X);
RcppExport SEXP _resemble_get_column_means(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(get_column_means(X));
    return rcpp_result_gen;
END_RCPP
}
// get_column_sums
NumericVector get_column_sums(arma::mat X);
RcppExport SEXP _resemble_get_column_sums(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(get_column_sums(X));
    return rcpp_result_gen;
END_RCPP
}
// opls_for_projection
List opls_for_projection(arma::mat X, arma::mat Y, int ncomp, bool scale, double maxiter, double tol, String pcSelmethod, double pcSelvalue);
RcppExport SEXP _resemble_opls_for_projection(SEXP XSEXP, SEXP YSEXP, SEXP ncompSEXP, SEXP scaleSEXP, SEXP maxiterSEXP, SEXP tolSEXP, SEXP pcSelmethodSEXP, SEXP pcSelvalueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< bool >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< double >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< String >::type pcSelmethod(pcSelmethodSEXP);
    Rcpp::traits::input_parameter< double >::type pcSelvalue(pcSelvalueSEXP);
    rcpp_result_gen = Rcpp::wrap(opls_for_projection(X, Y, ncomp, scale, maxiter, tol, pcSelmethod, pcSelvalue));
    return rcpp_result_gen;
END_RCPP
}
// opls_get_all
List opls_get_all(arma::mat X, arma::mat Y, int ncomp, bool scale, double maxiter, double tol);
RcppExport SEXP _resemble_opls_get_all(SEXP XSEXP, SEXP YSEXP, SEXP ncompSEXP, SEXP scaleSEXP, SEXP maxiterSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< bool >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< double >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(opls_get_all(X, Y, ncomp, scale, maxiter, tol));
    return rcpp_result_gen;
END_RCPP
}
// opls
List opls(arma::mat X, arma::mat Y, int ncomp, bool scale, double maxiter, double tol);
RcppExport SEXP _resemble_opls(SEXP XSEXP, SEXP YSEXP, SEXP ncompSEXP, SEXP scaleSEXP, SEXP maxiterSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< bool >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< double >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(opls(X, Y, ncomp, scale, maxiter, tol));
    return rcpp_result_gen;
END_RCPP
}
// opls_get_basics
List opls_get_basics(arma::mat X, arma::mat Y, int ncomp, bool scale, double maxiter, double tol);
RcppExport SEXP _resemble_opls_get_basics(SEXP XSEXP, SEXP YSEXP, SEXP ncompSEXP, SEXP scaleSEXP, SEXP maxiterSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< bool >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< double >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(opls_get_basics(X, Y, ncomp, scale, maxiter, tol));
    return rcpp_result_gen;
END_RCPP
}
// predict_opls
Rcpp::NumericMatrix predict_opls(arma::mat bo, arma::mat b, int ncomp, arma::mat newdata, bool scale, arma::mat Xscale);
RcppExport SEXP _resemble_predict_opls(SEXP boSEXP, SEXP bSEXP, SEXP ncompSEXP, SEXP newdataSEXP, SEXP scaleSEXP, SEXP XscaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type bo(boSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type newdata(newdataSEXP);
    Rcpp::traits::input_parameter< bool >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xscale(XscaleSEXP);
    rcpp_result_gen = Rcpp::wrap(predict_opls(bo, b, ncomp, newdata, scale, Xscale));
    return rcpp_result_gen;
END_RCPP
}
// project_opls
Rcpp::NumericMatrix project_opls(arma::mat projection_mat, int ncomp, arma::mat newdata, bool scale, arma::mat Xcenter, arma::mat Xscale);
RcppExport SEXP _resemble_project_opls(SEXP projection_matSEXP, SEXP ncompSEXP, SEXP newdataSEXP, SEXP scaleSEXP, SEXP XcenterSEXP, SEXP XscaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type projection_mat(projection_matSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type newdata(newdataSEXP);
    Rcpp::traits::input_parameter< bool >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xcenter(XcenterSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xscale(XscaleSEXP);
    rcpp_result_gen = Rcpp::wrap(project_opls(projection_mat, ncomp, newdata, scale, Xcenter, Xscale));
    return rcpp_result_gen;
END_RCPP
}
// reconstruction_error
Rcpp::NumericMatrix reconstruction_error(arma::mat x, arma::mat projection_mat, arma::mat xloadings);
RcppExport SEXP _resemble_reconstruction_error(SEXP xSEXP, SEXP projection_matSEXP, SEXP xloadingsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type projection_mat(projection_matSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xloadings(xloadingsSEXP);
    rcpp_result_gen = Rcpp::wrap(reconstruction_error(x, projection_mat, xloadings));
    return rcpp_result_gen;
END_RCPP
}
// get_pls_weights
Rcpp::NumericMatrix get_pls_weights(arma::mat projection_mat, arma::mat xloadings, arma::mat coefficients, arma::mat new_x, int min_component, int max_component, bool scale, arma::mat Xcenter, arma::mat Xscale);
RcppExport SEXP _resemble_get_pls_weights(SEXP projection_matSEXP, SEXP xloadingsSEXP, SEXP coefficientsSEXP, SEXP new_xSEXP, SEXP min_componentSEXP, SEXP max_componentSEXP, SEXP scaleSEXP, SEXP XcenterSEXP, SEXP XscaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type projection_mat(projection_matSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xloadings(xloadingsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coefficients(coefficientsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type new_x(new_xSEXP);
    Rcpp::traits::input_parameter< int >::type min_component(min_componentSEXP);
    Rcpp::traits::input_parameter< int >::type max_component(max_componentSEXP);
    Rcpp::traits::input_parameter< bool >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xcenter(XcenterSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xscale(XscaleSEXP);
    rcpp_result_gen = Rcpp::wrap(get_pls_weights(projection_mat, xloadings, coefficients, new_x, min_component, max_component, scale, Xcenter, Xscale));
    return rcpp_result_gen;
END_RCPP
}
// opls_cv_cpp
List opls_cv_cpp(arma::mat X, arma::mat Y, bool scale, String method, arma::mat mindices, arma::mat pindices, int min_component, int ncomp, arma::mat new_x, double maxiter, double tol, arma::mat wapls_grid);
RcppExport SEXP _resemble_opls_cv_cpp(SEXP XSEXP, SEXP YSEXP, SEXP scaleSEXP, SEXP methodSEXP, SEXP mindicesSEXP, SEXP pindicesSEXP, SEXP min_componentSEXP, SEXP ncompSEXP, SEXP new_xSEXP, SEXP maxiterSEXP, SEXP tolSEXP, SEXP wapls_gridSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< bool >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< String >::type method(methodSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mindices(mindicesSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type pindices(pindicesSEXP);
    Rcpp::traits::input_parameter< int >::type min_component(min_componentSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type new_x(new_xSEXP);
    Rcpp::traits::input_parameter< double >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type wapls_grid(wapls_gridSEXP);
    rcpp_result_gen = Rcpp::wrap(opls_cv_cpp(X, Y, scale, method, mindices, pindices, min_component, ncomp, new_x, maxiter, tol, wapls_grid));
    return rcpp_result_gen;
END_RCPP
}
// gaussian_process
List gaussian_process(arma::mat X, arma::mat Y, float noisev, bool scale);
RcppExport SEXP _resemble_gaussian_process(SEXP XSEXP, SEXP YSEXP, SEXP noisevSEXP, SEXP scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< float >::type noisev(noisevSEXP);
    Rcpp::traits::input_parameter< bool >::type scale(scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(gaussian_process(X, Y, noisev, scale));
    return rcpp_result_gen;
END_RCPP
}
// predict_gaussian_process
NumericVector predict_gaussian_process(arma::mat Xz, arma::mat alpha, arma::mat newdata, bool scale, arma::mat Xcenter, arma::mat Xscale, arma::mat Ycenter, arma::mat Yscale);
RcppExport SEXP _resemble_predict_gaussian_process(SEXP XzSEXP, SEXP alphaSEXP, SEXP newdataSEXP, SEXP scaleSEXP, SEXP XcenterSEXP, SEXP XscaleSEXP, SEXP YcenterSEXP, SEXP YscaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Xz(XzSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type newdata(newdataSEXP);
    Rcpp::traits::input_parameter< bool >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xcenter(XcenterSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xscale(XscaleSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Ycenter(YcenterSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Yscale(YscaleSEXP);
    rcpp_result_gen = Rcpp::wrap(predict_gaussian_process(Xz, alpha, newdata, scale, Xcenter, Xscale, Ycenter, Yscale));
    return rcpp_result_gen;
END_RCPP
}
// gaussian_process_cv
List gaussian_process_cv(arma::mat X, arma::mat Y, arma::mat mindices, arma::mat pindices, float noisev, bool scale);
RcppExport SEXP _resemble_gaussian_process_cv(SEXP XSEXP, SEXP YSEXP, SEXP mindicesSEXP, SEXP pindicesSEXP, SEXP noisevSEXP, SEXP scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mindices(mindicesSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type pindices(pindicesSEXP);
    Rcpp::traits::input_parameter< float >::type noisev(noisevSEXP);
    Rcpp::traits::input_parameter< bool >::type scale(scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(gaussian_process_cv(X, Y, mindices, pindices, noisev, scale));
    return rcpp_result_gen;
END_RCPP
}
// pca_nipals
List pca_nipals(arma::mat X, int ncomp, bool center, bool scale, double maxiter, double tol, String pcSelmethod, double pcSelvalue);
RcppExport SEXP _resemble_pca_nipals(SEXP XSEXP, SEXP ncompSEXP, SEXP centerSEXP, SEXP scaleSEXP, SEXP maxiterSEXP, SEXP tolSEXP, SEXP pcSelmethodSEXP, SEXP pcSelvalueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< bool >::type center(centerSEXP);
    Rcpp::traits::input_parameter< bool >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< double >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< String >::type pcSelmethod(pcSelmethodSEXP);
    Rcpp::traits::input_parameter< double >::type pcSelvalue(pcSelvalueSEXP);
    rcpp_result_gen = Rcpp::wrap(pca_nipals(X, ncomp, center, scale, maxiter, tol, pcSelmethod, pcSelvalue));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_resemble_fast_diss", (DL_FUNC) &_resemble_fast_diss, 3},
    {"_resemble_fast_diss_vector", (DL_FUNC) &_resemble_fast_diss_vector, 1},
    {"_resemble_moving_cor_diss", (DL_FUNC) &_resemble_moving_cor_diss, 3},
    {"_resemble_which_min", (DL_FUNC) &_resemble_which_min, 1},
    {"_resemble_which_min_vector", (DL_FUNC) &_resemble_which_min_vector, 1},
    {"_resemble_get_col_largest_sd", (DL_FUNC) &_resemble_get_col_largest_sd, 1},
    {"_resemble_get_column_sds", (DL_FUNC) &_resemble_get_column_sds, 1},
    {"_resemble_get_column_means", (DL_FUNC) &_resemble_get_column_means, 1},
    {"_resemble_get_column_sums", (DL_FUNC) &_resemble_get_column_sums, 1},
    {"_resemble_opls_for_projection", (DL_FUNC) &_resemble_opls_for_projection, 8},
    {"_resemble_opls_get_all", (DL_FUNC) &_resemble_opls_get_all, 6},
    {"_resemble_opls", (DL_FUNC) &_resemble_opls, 6},
    {"_resemble_opls_get_basics", (DL_FUNC) &_resemble_opls_get_basics, 6},
    {"_resemble_predict_opls", (DL_FUNC) &_resemble_predict_opls, 6},
    {"_resemble_project_opls", (DL_FUNC) &_resemble_project_opls, 6},
    {"_resemble_reconstruction_error", (DL_FUNC) &_resemble_reconstruction_error, 3},
    {"_resemble_get_pls_weights", (DL_FUNC) &_resemble_get_pls_weights, 9},
    {"_resemble_opls_cv_cpp", (DL_FUNC) &_resemble_opls_cv_cpp, 12},
    {"_resemble_gaussian_process", (DL_FUNC) &_resemble_gaussian_process, 4},
    {"_resemble_predict_gaussian_process", (DL_FUNC) &_resemble_predict_gaussian_process, 8},
    {"_resemble_gaussian_process_cv", (DL_FUNC) &_resemble_gaussian_process_cv, 6},
    {"_resemble_pca_nipals", (DL_FUNC) &_resemble_pca_nipals, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_resemble(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
